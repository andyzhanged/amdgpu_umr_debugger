	{ "mmVCE_STATUS", REG_MMIO, 0x8001, &mmVCE_STATUS[0], sizeof(mmVCE_STATUS)/sizeof(mmVCE_STATUS[0]), 0, 0 },
	{ "mmVCE_VCPU_CNTL", REG_MMIO, 0x8005, &mmVCE_VCPU_CNTL[0], sizeof(mmVCE_VCPU_CNTL)/sizeof(mmVCE_VCPU_CNTL[0]), 0, 0 },
	{ "mmVCE_VCPU_CACHE_OFFSET0", REG_MMIO, 0x8009, &mmVCE_VCPU_CACHE_OFFSET0[0], sizeof(mmVCE_VCPU_CACHE_OFFSET0)/sizeof(mmVCE_VCPU_CACHE_OFFSET0[0]), 0, 0 },
	{ "mmVCE_VCPU_CACHE_SIZE0", REG_MMIO, 0x800A, &mmVCE_VCPU_CACHE_SIZE0[0], sizeof(mmVCE_VCPU_CACHE_SIZE0)/sizeof(mmVCE_VCPU_CACHE_SIZE0[0]), 0, 0 },
	{ "mmVCE_VCPU_CACHE_OFFSET1", REG_MMIO, 0x800B, &mmVCE_VCPU_CACHE_OFFSET1[0], sizeof(mmVCE_VCPU_CACHE_OFFSET1)/sizeof(mmVCE_VCPU_CACHE_OFFSET1[0]), 0, 0 },
	{ "mmVCE_VCPU_CACHE_SIZE1", REG_MMIO, 0x800C, &mmVCE_VCPU_CACHE_SIZE1[0], sizeof(mmVCE_VCPU_CACHE_SIZE1)/sizeof(mmVCE_VCPU_CACHE_SIZE1[0]), 0, 0 },
	{ "mmVCE_VCPU_CACHE_OFFSET2", REG_MMIO, 0x800D, &mmVCE_VCPU_CACHE_OFFSET2[0], sizeof(mmVCE_VCPU_CACHE_OFFSET2)/sizeof(mmVCE_VCPU_CACHE_OFFSET2[0]), 0, 0 },
	{ "mmVCE_VCPU_CACHE_SIZE2", REG_MMIO, 0x800E, &mmVCE_VCPU_CACHE_SIZE2[0], sizeof(mmVCE_VCPU_CACHE_SIZE2)/sizeof(mmVCE_VCPU_CACHE_SIZE2[0]), 0, 0 },
	{ "mmVCE_SOFT_RESET", REG_MMIO, 0x8048, &mmVCE_SOFT_RESET[0], sizeof(mmVCE_SOFT_RESET)/sizeof(mmVCE_SOFT_RESET[0]), 0, 0 },
	{ "mmVCE_RB_BASE_LO2", REG_MMIO, 0x805B, &mmVCE_RB_BASE_LO2[0], sizeof(mmVCE_RB_BASE_LO2)/sizeof(mmVCE_RB_BASE_LO2[0]), 0, 0 },
	{ "mmVCE_RB_BASE_HI2", REG_MMIO, 0x805C, &mmVCE_RB_BASE_HI2[0], sizeof(mmVCE_RB_BASE_HI2)/sizeof(mmVCE_RB_BASE_HI2[0]), 0, 0 },
	{ "mmVCE_RB_SIZE2", REG_MMIO, 0x805D, &mmVCE_RB_SIZE2[0], sizeof(mmVCE_RB_SIZE2)/sizeof(mmVCE_RB_SIZE2[0]), 0, 0 },
	{ "mmVCE_RB_RPTR2", REG_MMIO, 0x805E, &mmVCE_RB_RPTR2[0], sizeof(mmVCE_RB_RPTR2)/sizeof(mmVCE_RB_RPTR2[0]), 0, 0 },
	{ "mmVCE_RB_WPTR2", REG_MMIO, 0x805F, &mmVCE_RB_WPTR2[0], sizeof(mmVCE_RB_WPTR2)/sizeof(mmVCE_RB_WPTR2[0]), 0, 0 },
	{ "mmVCE_RB_BASE_LO", REG_MMIO, 0x8060, &mmVCE_RB_BASE_LO[0], sizeof(mmVCE_RB_BASE_LO)/sizeof(mmVCE_RB_BASE_LO[0]), 0, 0 },
	{ "mmVCE_RB_BASE_HI", REG_MMIO, 0x8061, &mmVCE_RB_BASE_HI[0], sizeof(mmVCE_RB_BASE_HI)/sizeof(mmVCE_RB_BASE_HI[0]), 0, 0 },
	{ "mmVCE_RB_SIZE", REG_MMIO, 0x8062, &mmVCE_RB_SIZE[0], sizeof(mmVCE_RB_SIZE)/sizeof(mmVCE_RB_SIZE[0]), 0, 0 },
	{ "mmVCE_RB_RPTR", REG_MMIO, 0x8063, &mmVCE_RB_RPTR[0], sizeof(mmVCE_RB_RPTR)/sizeof(mmVCE_RB_RPTR[0]), 0, 0 },
	{ "mmVCE_RB_WPTR", REG_MMIO, 0x8064, &mmVCE_RB_WPTR[0], sizeof(mmVCE_RB_WPTR)/sizeof(mmVCE_RB_WPTR[0]), 0, 0 },
	{ "mmVCE_RB_ARB_CTRL", REG_MMIO, 0x809F, NULL, 0, 0, 0 },
	{ "mmVCE_CLOCK_GATING_A", REG_MMIO, 0x80BE, NULL, 0, 0, 0 },
	{ "mmVCE_CLOCK_GATING_B", REG_MMIO, 0x80BF, NULL, 0, 0, 0 },
	{ "mmVCE_UENC_CLOCK_GATING", REG_MMIO, 0x816F, NULL, 0, 0, 0 },
	{ "mmVCE_UENC_REG_CLOCK_GATING", REG_MMIO, 0x8170, NULL, 0, 0, 0 },
	{ "mmVCE_UENC_DMA_DCLK_CTRL", REG_MMIO, 0x8250, &mmVCE_UENC_DMA_DCLK_CTRL[0], sizeof(mmVCE_UENC_DMA_DCLK_CTRL)/sizeof(mmVCE_UENC_DMA_DCLK_CTRL[0]), 0, 0 },
	{ "mmVCE_SYS_INT_EN", REG_MMIO, 0x8340, &mmVCE_SYS_INT_EN[0], sizeof(mmVCE_SYS_INT_EN)/sizeof(mmVCE_SYS_INT_EN[0]), 0, 0 },
	{ "mmVCE_SYS_INT_ACK", REG_MMIO, 0x8341, &mmVCE_SYS_INT_ACK[0], sizeof(mmVCE_SYS_INT_ACK)/sizeof(mmVCE_SYS_INT_ACK[0]), 0, 0 },
	{ "mmVCE_LMI_VCPU_CACHE_40BIT_BAR", REG_MMIO, 0x8397, &mmVCE_LMI_VCPU_CACHE_40BIT_BAR[0], sizeof(mmVCE_LMI_VCPU_CACHE_40BIT_BAR)/sizeof(mmVCE_LMI_VCPU_CACHE_40BIT_BAR[0]), 0, 0 },
	{ "mmVCE_LMI_CTRL2", REG_MMIO, 0x839D, &mmVCE_LMI_CTRL2[0], sizeof(mmVCE_LMI_CTRL2)/sizeof(mmVCE_LMI_CTRL2[0]), 0, 0 },
	{ "mmVCE_LMI_CTRL", REG_MMIO, 0x83A6, &mmVCE_LMI_CTRL[0], sizeof(mmVCE_LMI_CTRL)/sizeof(mmVCE_LMI_CTRL[0]), 0, 0 },
	{ "mmVCE_LMI_STATUS", REG_MMIO, 0x83A7, NULL, 0, 0, 0 },
	{ "mmVCE_LMI_VM_CTRL", REG_MMIO, 0x83A8, NULL, 0, 0, 0 },
	{ "mmVCE_LMI_SWAP_CNTL", REG_MMIO, 0x83AD, &mmVCE_LMI_SWAP_CNTL[0], sizeof(mmVCE_LMI_SWAP_CNTL)/sizeof(mmVCE_LMI_SWAP_CNTL[0]), 0, 0 },
	{ "mmVCE_LMI_SWAP_CNTL1", REG_MMIO, 0x83AE, &mmVCE_LMI_SWAP_CNTL1[0], sizeof(mmVCE_LMI_SWAP_CNTL1)/sizeof(mmVCE_LMI_SWAP_CNTL1[0]), 0, 0 },
	{ "mmVCE_LMI_MISC_CTRL", REG_MMIO, 0x83B5, NULL, 0, 0, 0 },
	{ "mmVCE_LMI_CACHE_CTRL", REG_MMIO, 0x83BD, &mmVCE_LMI_CACHE_CTRL[0], sizeof(mmVCE_LMI_CACHE_CTRL)/sizeof(mmVCE_LMI_CACHE_CTRL[0]), 0, 0 },
